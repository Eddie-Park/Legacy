/***************************************************************************
 *
 *
 *         **  **     **  ******  ********  ********  ********  **    **    
 *        **    **   **  **   ** ********  ********  ********  **    **
 *       **     *****   **   **    **     **        **        **    **
 *      **       **    ******     **     ****      **        ********
 *     **       **    **  **     **     **        **        **    **
 *    *******  **    **   **    **     ********  ********  **    **
 *   *******  **    **    **   **     ********  ********  **    **  
 *
 *            L Y R T E C H   S I G N A L   P R O C E S S I N G              
 *
 ***************************************************************************
 *                                                                          
 *  Project     : VHS-ADC V4 HIGH LEVEL CONTROL API     (HEADER)
 *  File        : vhsadc16ctrl_v4.h
 *  Description : WIN32 CONTROL API for VHS-ADC V4 Boards.
 *
 *  Author(s)   : Jérémie Plante
 *
 *						Copyright (c) Lyrtech inc. 2005
 *
 ***************************************************************************
 *
 *                             R e v i s i o n s                           
 *
 *--------------------------------------------------------------------------
 *  Date       Author    Version    Description					
 *--------------------------------------------------------------------------
 *  09/12/05   JPLA      2.00       V4 HIGH LEVEL API.
 *  20/04/06   JPLA      2.20       Doxygenification (API DOC!)
 ***************************************************************************
 *  "$RCSfile: vhsadc16ctrl_v4.h,v $"
 *  "$Author: jf.robert $"
 *  "$Date: 2007/05/07 17:40:51 $"
 ***************************************************************************/
/*! \file vhsadc16ctrl_v4.h
  \brief VHS-ADC Virtex-4-specific API.

  This section describes all the functions used by the high-level API.<BR>
  Refer to this API first when developing applications meant to communicate
  with the VHS-ADC Virtex-4, as they contain application-specific routines.
*/
/* The host CPU and DSP applications share the same high-level API. */

#ifndef _VHSADC16CTRL_V4_H_
#define _VHSADC16CTRL_V4_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "vhsadac16_regs.h"

#include "vhsadc16ctrl.h"

#ifdef WIN32
#include "vhsadac16_host_api.h"
#else
#include "vhsadac16_dsp_api.h"
#ifndef TRUE
#define TRUE 1
#endif
#ifndef FALSE
#define FALSE 0
#endif
#endif


/**
 * All VHS-ADC/DAC Virtex-4 clock sources.
 */
typedef enum {
	ONBOARD,						/*!< Onboard clock */
	EXTERNAL_FRONT,                 /*!< External front panel clock */
	ONBOARD_DIVIDED,                /*!< Onboard divided clock */
	RESERVED,                       /*!< Invalid clock */
	FPDP_RECEIVE,                   /*!< Clock received from FPDP */
	RAPIDCHANNEL,                   /*!< RapidCHANNEL clock */
	DIF_RECEIVE,                    /*!< Clock received from DIF */
	FPGA_GENERATED,                 /*!< Clock generated by the FPGA */
	RESERVED_ERROR                  /*!< Invalid clock */
} CLOCK_SOURCE;


/* Public Prototypes */

/**
 * Sets under what mode the clock is controlled.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True indicates that the clock is controlled by the HST_CLK_CTRL register, 
 *            otherwise by the custom logic. 
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_HostControlClock(HANDLE h, BOOL mode);

/**
 * Sets the DIF clock divider.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True indicates that the DIF clock is divided by two, otherwise the clock is not divided.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_DivideDIFClock(HANDLE h,BOOL mode);

/**
 * Queries whether the DIF clock is divided.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return True if the DIF clock is divided by two. 
 */
BOOL			   VHSADC_IsDIFClockDivided(HANDLE h);

/**
 * Queries whether the DIF clock is controlled by the custom logic.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return True if the DIF clock is controlled by the custom logic. 
 */
BOOL            VHSADC_IsDIFClockSysgenControlled(HANDLE h);

/**
 * Queries the clock source.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return Clock source.
 */
CLOCK_SOURCE    VHSADC_GetClockSource(HANDLE h);

/**
 * Sets the clock source.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] clkSource VHS-ADC/DAC Virtex-4 clock source.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_SetClockSource(HANDLE h,CLOCK_SOURCE clkSource);

/**
 * Sets the SERDES control mode.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True indicates that the SERDES is controlled by the DIF_HOST_CTRL register,
 *            otherwise by the custom logic.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_HostControlSerdes(HANDLE h, BOOL mode);

/**
 * Sets the SERDES transmitter output enable state.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True enables the SERDES transmitter output.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_EnableSerdesTransmitter(HANDLE h, BOOL mode);

/**
 * Sets the SERDES receiver input enable state.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True enables the SERDES receiver input.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_EnableSerdesReceiver(HANDLE h, BOOL mode);

/**
 * Sets the SERDES transmitter loopback state.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True enables the SERDES transmitter loopback mode.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_EnableSerdesTransmitLoopback(HANDLE h, BOOL mode);

/**
 * Sets the SERDES receiver loopback state.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True enables the SERDES receiver loopback mode.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_EnableSerdesReceiverLoopback(HANDLE h, BOOL mode);

/**
 * Sets the SERDES receiver power state.
 *
 * \param[in] h VHS-ADC handle.
 * \param[in] mode True enables the SERDES receiver power.
 *
 * \return RETURN_NORMAL on success, RETURN_ERROR otherwise.
 */
RETURN_STATUS   VHSADC_PowerDownSerdesReceiver(HANDLE h, BOOL mode);

/**
 * Returns the SERDES lock status.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return SERDES lock status.
 */
VHS_LOCK_STATUS VHSADC_GetSerdesLockStatus(HANDLE h);

/**
 * Queries whether the VHS module is AC coupled.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return True if the VHS module is AC coupled.
 */
BOOL VHSADC_IsVhsDaughterACCoupled(HANDLE h);

/* RapidCHANNEL public API */

/**
 * Queries whether the RapidCHANNEL is aligned.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return True if the RapidCHANNEL is aligned.
 */
BOOL  VHSADC_IsRapidChannelAligned(HANDLE h);

/**
 * Queries whether the RapidCHANNEL DCM is locked.
 *
 * \param[in] h VHS-ADC handle.
 *
 * \return True if the RapidCHANNEL DCM is locked.
 */
BOOL  VHSADC_IsRapidChannelDCMLocked(HANDLE h);



#ifdef __cplusplus
}
#endif

#endif /* _VHSADC16CTRL_V4_H_ */

